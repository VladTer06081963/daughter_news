mixin portfolioItem(image, title, description, link)
  div(class="relative group overflow-hidden rounded-lg shadow-lg")
    img(src=image alt=title class="w-full transition-transform transform group-hover:scale-110")
    div(class="absolute inset-0 bg-black bg-opacity-50 flex flex-col justify-center items-center opacity-0 group-hover:opacity-100 transition-opacity")
      h3.text-lg.font-bold.text-white= title
      p.text-gray-300.mb-4= description
      a(href=link class="text-pink-500 hover:underline") Mehr anzeigen
      i(class="bi bi-box-arrow-up-right")
      
mixin serviceCard(icon, title, description, link)
  div 
    
    i(class=`bi ${icon}`)
    h2= title
    p= description
    a(href=link) Mehr erfahren


mixin navbar()
  nav
    img(src="/images/Logo_Oksana_Te.png" alt="Logo" class="logo")
    ul(id="sidemenu" style="right: -200px")
      if !isExternal
        ul(id="sidemenu" style="right: -200px")
          li: a(href="/") Startseite
          li: a(href="#about") Über mich
          li: a(href="#services") Leistungen
          li: a(href="#portfolio") Portfolio
          li: a(href="#contact") Kontakt
          li: a(href="/news") News
          li: a(href="/finans") Finans
          i(class="bi bi-x" onclick="openmenu()")
        i(class="bi bi-list" onclick="openmenu()")

//- Переменные для цветов
- const paginationTextColor = 'text-pink-200'; // Основной цвет текста
- const paginationHoverColor = 'text-pink-700'; // Цвет текста при наведении
- const paginationActiveColor = 'text-pink-500'; // Цвет активной страницы
- const paginationActiveFontWeight = 'font-bold'; // Жирный шрифт для активной страницы
- const paginationDisabledColor = 'text-gray-400'; // Цвет неактивных элементов
- const paginationTransition = 'transition-colors'; // Плавный переход для hover

mixin pagination(currentPage, totalPages, prevPage, nextPage)
  .flex.justify-center.mt-4.mb-8
    //- Стрелка "Назад"
    if prevPage
      a(href=`?page=${prevPage}` class=`mr-4 px-4 py-2 ${paginationTextColor} hover:${paginationHoverColor} ${paginationTransition}`) <
    else
      span.mr-4.px-4.py-2(class=`${paginationDisabledColor} cursor-not-allowed`) <

    //- Первая страница
    a(href=`?page=1` class=`px-4 py-2 ${paginationTextColor} hover:${paginationHoverColor} ${paginationTransition}`) 1

    //- Многоточие, если текущая страница далеко от начала
    if currentPage > 3
      span.px-4.py-2(class=`${paginationTextColor}`) ...

    //- Текущая страница и соседние
    - let startPage = Math.max(2, currentPage - 1);
    - let endPage = Math.min(totalPages - 1, currentPage + 1);

    - for (let i = startPage; i <= endPage; i++)
      if i === currentPage
        span.px-4.py-2(class=`${paginationActiveColor} ${paginationActiveFontWeight}`)= i
      else
        a(href=`?page=${i}` class=`px-4 py-2 ${paginationTextColor} hover:${paginationHoverColor} ${paginationTransition}`)= i

    //- Многоточие, если текущая страница далеко от конца
    if currentPage < totalPages - 2
      span.px-4.py-2(class=`${paginationTextColor}`) ...

    //- Последняя страница
    if totalPages > 1
      a(href=`?page=${totalPages}` class=`px-4 py-2 ${paginationTextColor} hover:${paginationHoverColor} ${paginationTransition}`)= totalPages

    //- Стрелка "Вперед"
    if nextPage
      a(href=`?page=${nextPage}` class=`ml-4 px-4 py-2 ${paginationTextColor} hover:${paginationHoverColor} ${paginationTransition}`) >
    else
      span.ml-4.px-4.py-2(class=`${paginationDisabledColor} cursor-not-allowed`) >
